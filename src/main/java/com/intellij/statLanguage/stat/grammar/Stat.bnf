{
    tokens = [
ID="regexp:\^?([a-z]|[A-Z]|_)([a-z]|[A-Z]|_|[0-9])*"
INT="regexp:([0-9])+"
STRING="regexp:\"(\\.|[^\\\"])*\"|'(\\.|[^\\'])*'"
ML_COMMENT="regexp:/\*(?s).*\*/"
SL_COMMENT="regexp://[^\n\r]*(\r?\n)?"
WS="regexp:( |\t|\r|\n)+"
ANY_OTHER="regexp:."
      EVENTS_KEYWORD = 'events'
      END_KEYWORD = 'end'
      RESETEVENTS_KEYWORD = 'resetEvents'
      COMMANDS_KEYWORD = 'commands'
      STATE_KEYWORD = 'state'
      ACTIONS_KEYWORD = 'actions'
      L_BRACE_KEYWORD = '{'
      R_BRACE_KEYWORD = '}'
      PRED_KEYWORD = '=>'
    ]
    parserClass="com.intellij.statLanguage.stat.parser.StatParser"
        
    extends="com.intellij.statLanguage.stat.psi.impl.StatPsiCompositeElementImpl"
    psiClassPrefix="Stat"
    psiImplClassSuffix="Impl"
    psiPackage="com.intellij.statLanguage.stat.psi"
    psiImplPackage="com.intellij.statLanguage.stat.impl"
    elementTypeHolderClass="com.intellij.statLanguage.stat.psi.StatTypes"
    elementTypeClass="com.intellij.statLanguage.stat.psi.StatElementType"
    tokenTypeClass="com.intellij.statLanguage.stat.psi.StatTokenType"
    parserUtilClass= "com.intellij.languageUtil.parserUtilBase.GeneratedParserUtilBaseCopy"
    psiImplUtilClass="com.intellij.statLanguage.stat.psi.impl.StatPsiImplUtil"
    generateTokenAccessors=true
    generateTokens=true
    extraRoot(".*")= true
}
StatFile ::= Statemachine
Statemachine ::= ( 'events' Event + 'end' ) ? ( 'resetEvents' REFERENCE_Event_ID + 'end' ) ? ( 'commands' Command + 'end' ) ? State * 

Event ::= ID ID_EVENT_CODE 
{
mixin="com.intellij.statLanguage.stat.psi.impl.StatNamedElementImpl"
implements="com.intellij.psi.PsiNameIdentifierOwner"
methods=[ getName setName getNameIdentifier ]
}

Command ::= ID ID_COMMAND_CODE 
{
mixin="com.intellij.statLanguage.stat.psi.impl.StatNamedElementImpl"
implements="com.intellij.psi.PsiNameIdentifierOwner"
methods=[ getName setName getNameIdentifier ]
}

State ::= 'state' ID ( 'actions' '{' REFERENCE_Command_ID + '}' ) ? Transition * 'end' 
{
mixin="com.intellij.statLanguage.stat.psi.impl.StatNamedElementImpl"
implements="com.intellij.psi.PsiNameIdentifierOwner"
methods=[ getName setName getNameIdentifier ]
}

Transition ::= REFERENCE_Event_ID '=>' REFERENCE_State_ID 

REFERENCE_Event_ID ::= ID 

REFERENCE_Command_ID ::= ID 

REFERENCE_State_ID ::= ID 

ID_EVENT_CODE ::= ID 

ID_COMMAND_CODE ::= ID 

